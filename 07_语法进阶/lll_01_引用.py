"""
引用
在Python 中
    数据和变量是分开的
    数据保存在内存的一个位置
    变量中保存着数据在内存中的地址
    变量中记录数据的地址这个动作就叫做引用
    使用id()函数可以查看变量中保存数据所在的 内存地址

a = 1
id(a) == id(1)
b = a
id(b) == id(a) == id(1)

data is like a box, and the var is like a tag of the box.
你可以给变量再赋值，其实就是把便签纸从原来的盒子撕下来贴到另一个盒子上
"""


def test(num):
    print("在函数内部 %d 对应的内存地址是 %d" % (num, id(num)))
    res = "hello"
    print("函数要返回数据的内存地址是 %d" % id(res))
    return res  # 注意如果有返回值但是没有定义变量接收，程序不会报错，但是无法获得返回结果
    # 函数返回的也是返回值的引用


a = 10

print("a 变量保存数据的内存地址是 %d" % id(a))  # 数据的地址本质上是一个数字

r = test(a)  # 其实是将 id(a) （那个内存位置） 传递给了num
# 调用函数，本质上传递的是实参保存数据的引用，而不是实参保存的数据！！！(感觉就是照了一张一模一样的便签纸变成了形参)
print("%s 的内存地址是 %d" % (r, id(r)))
# 其实就是调用和返回的时候并没有把盒子直接给你，而是把便签纸给你了，自己根据便签纸去找盒子里的内容
