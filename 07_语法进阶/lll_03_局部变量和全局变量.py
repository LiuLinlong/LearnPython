"""
局部变量是在函数内部定义的变量，只能在函数内部使用
全局变量是在函数外部定义的变量，所有桉树内部都可以使用这个变量
Tips：在其他开发语言中，大多不推荐使用全局变量——可变范围太大，导致程序不好维护！
"""

"""
局部变量
函数执行结束后，局部变量会被系统回收
不同的函数可以定义名称相同的局部变量，但彼此没有任何影响
函数内部定义的变量不能在函数外使用

局部变量的作用
    在函数内部使用，临时保存函数内部需要使用的数据
    
局部变量的生命周期
    生命周期：变量从创建到被系统回收的过程
    局部变量在函数执行时才会被创建
    函数执行结束后局部变量被系统回收
    局部变量在生命周期内，可以用来存储函数内部临时使用到的数据
"""


def demo1():
    """单步执行观察num的生命周期"""
    num = 10
    print("在demo1函数内部的变量是 %d" % num)


def demo2():
    num = 20
    print("在demo2函数内部的变量是 %d" % num)


demo1()
demo2()

"""
全局变量
函数内会先看是不是局部变量再看是不是全局变量
"""
# 单步执行以下代码观察Debugger窗口的变化，会提示当前内部函数或moudle
number = 10


def demo3():
    print("demo3 ==> %d" % number)


def demo4():
    print("demo4 ==> %d" % number)


demo3()
demo4()
