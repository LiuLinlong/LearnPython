"""
类
一群具有相同特征或者行为的食物的一个统称，抽象，不能直接使用
    特征被称为属性
    行为被称为方法
类相当于一张制造飞机的图纸，是一个模板，是负责创建对象的

对象
对象是由类创建出来的一个具体存在，可以直接使用
由哪一个类创建出来的对象，就拥有在哪一个类中定义的属性和方法
对象就相当于图纸制造出来的飞机

类与对象的关系
类是模板，对象是根据类这个模板创建出来的，应该先有类再有对象
类只有一个，而对象可以有很多个
    不同对象之间属性可能会各不相同
类中定义了什么属性和方法，对象中就有什么属性和方法，不可能多，也不可能少

类的设计
在使用面向对象开发前，应该首先分析需求，确定一下程序中需要包含哪些类
要设计一个类通常需要满足三个要素
    类名  这类事物的名字，满足大驼峰命名法（回去复习命名法）
    属性  这类事物具有什么样的特征
    方法  这类事物具有什么样的行为

类名的确定
    名词提炼法：分析整个业务流程，出现的名词，通常就是找到的类
属性和方法的确定
    对对象的特征描述，通常可以定义成属性
    对象具有的行为（动词），通常可以定义成方法
    需求中没有提到的属性和方法在设计类的时候不需要考虑
"""

"""
面向对象基础语法
01.dir内置函数
    在python中，变量，数据，函数都是对象【C语言——万物皆函数；Python——万物皆对象】
        之前在ipython中，输入.按Tab调出方法了吧
        使用dir传入标识符/数据，可以查看对象内的所有属性及方法（返回的是个list）
    __方法名__ 格式的方法是Python内置方法/属性

    方法名     类型  作用
    __new__   方法  创建对象时，会被自动调用
    __init__  方法  对象被初始化时，会被自动调用
    __del__   方法  对象被从内存中销毁前，会被自动调用
    __str__   方法  返回对象的描述信息，print函数输出使用

02.定义简单的类
面向对象是一个更大的封装
    2.1定义只包含方法的类
    class 类名:  # 类名需要符合大驼峰命名法
        def 方法一(self, 参数列表):  # 后面会讲self
            pass

        def 方法二(self, 参数列表):
            pass

    2.2创建对象
    对象变量 = 类名()

"""


class Cat:
    def eat(self):
        print("小猫爱吃鱼")

    def drink(self):
        print("小猫要喝水")


# 创建猫对象
tom = Cat()

tom.eat()
tom.drink()
"""
引用概念的强调
使用类创建对象后，tom变量中仍然记录的是对象在内存中的地址
也就是tom变量引用了新建的猫对象

使用print函数输出对象变量，默认情况下，是能够输出这个对象引用的对象是由哪一个类创建的对象，以及在内存中的地址（十六进制表示）
    %d 输出10进制数字
    %x 输出16进制数字
"""
print(tom)
addr = id(tom)
print("%d" % addr)
print("%x" % addr)
